-- 1. Praktikum Wiederhohlung

-- 2. Erweiterung des Datenmodelles
--a)
SELECT Distinct LEFT (KunPLZ, 2)
from Kunde

--b)
SELECT * INTO Niederlassung from trommelhelden..quelleNiederlassung
Alter table Niederlassung add primary key (NLNr)

SELECT * into Gebiet from trommelhelden..quelleGebiet
Alter table Gebiet add primary key (GebietID)
Alter Table Gebiet add Foreign key (NLNr) references Niederlassung (NLNr)

Select * from Niederlassung
Select * from Gebiet

--c)
SELECT * From Mitarbeiter
Alter Table Mitarbeiter Add NLNr int default null

--d) 
Update Mitarbeiter 
SET NLNr = (select N.NLNr from Niederlassung N where n.Ort LiKE Mitarbeiter.MitEinsatzort

--e)
Alter table Mitarbeiter Drop column MitEinsatzort

--f)
ALter Table Mitarbeiter ADD Foreign key (NLNr) references Niederlassung (NLNr)

-- 3. Datenmodell
select AufNr
from Auftrag
where MitID in (Select MitID from Mitarbeiter Where MItJob = 'Meister')

SELECT MitName
From Mitarbeiter 
Where NLNr in (Select NLNr from Niederlassung where Ort = 'Dresden')

SELECT AufNr
From Auftrag
Where MitID in (Select MitID from Mitarbeiter Where MitStundensat > 80)

--4.Daten importieren
Select * From Auftrag
Select * From Montage
insert into Auftrag Select * from trommelhelden..quelledbs2Auftrag
insert into Montage Select * from trommelhelden..quelledbs2Montage

--tabelle Rechnung
Create Table Rechnung(
KunNr int Not null,
AufNR int Not null,
RechDAt date not null,
RechBetrag smallmoney not null,
 Primary Key(KunNR,AufNR))

 Alter table Rechnung add foreign key (KunNr) references Kunde (KunNr)
 Alter table Rechnung add foreign key (AufNr) references Auftrag (Aufnr)

 --6.View
  Create View Zuständigkeit AS
  Select a.Aufnr, a.KunNr ,m.MitId 
  From Auftrag a 
  join Kunde k on a.KunNr = k.KunNr
  join Gebiet g on g.GebietID = Left(KunPLZ, 2)
  join Mitarbeiter m on m.NLNr = g.NLNr
  Where a.MitID is null
  select * from Zuständigkeit

  --Meilenstein 2
  -- 4
  CREATE TABLE artikel (
 aid INT PRIMARY KEY,
 bezeichnung VARCHAR(30),
 bestand INT CHECK (bestand>=0),
 preis DECIMAL(10,2) CHECK (preis>=0)
)
INSERT INTO artikel VALUES(111, 'Stuhl', 1200, 23.60)
INSERT INTO artikel VALUES(112, 'Sofa', 100, 223.60)
INSERT INTO artikel VALUES(113, 'Sessel', 66, 123.60)
INSERT INTO artikel VALUES(115, 'Tisch', 20, 20.00)
INSERT INTO artikel VALUES(117, 'Regal', 12, 3.99)

--a)

begin transaction
Select * from artikel
Update artikel 
set bezeichnung = 'Couch'
Where bezeichnung = 'Sofa'

Select * from artikel
rollback
Select * From artikel
--b)

begin transaction
Select * from artikel
Update artikel 
set bezeichnung = 'Couch'
Where bezeichnung = 'Sofa'

Commit
Select * From artikel

--c)
begin transaction 
Select * from artikel
Set XACT_ABORT on
declare @menge_sessel int= 10
declare @menge_tisch int= 10 
Update artikel
Set bestand -= @menge_sessel
where bezeichnung = 'Sessel'
Update artikel
Set bestand -= @menge_tisch
where bezeichnung = 'Tisch'
select * from artikel
rollback
select * from artikel

-- korrektur und so 
Update artikel
set bestand +=10 
where bezeichnung = 'Sessel'

begin transaction 
Select * from artikel
Set XACT_ABORT on
declare @menge_sessel2 int= 25
declare @menge_tisch2 int= 25
Update artikel
Set bestand -= @menge_sessel2
where bezeichnung = 'Sessel'
Update artikel
Set bestand -= @menge_tisch2
where bezeichnung = 'Tisch'
select * from artikel
rollback
select * from artikel
